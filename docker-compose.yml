version: "3.9"

networks:
  isolation-network:
    driver: bridge
  

services:
  db:
    build: ./mysqldDB
    container_name: mysql-container
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: users
      MYSQL_ROOT_PASSWORD: 123
    networks:
      - isolation-network
    
  mongodb:
    build: ./mongoDB
    container_name: mongo
    environment:
      MONGO_INITDB_DATABASE: docker_mongo
    ports:
      - "28017:27017"
    networks:
      - isolation-network


  analysis:
    build: ./analysis
    restart: always
    container_name: analysis
    ports:
      - "8082:8080"
    environment:
      spring.datasource.url: jdbc:mysql://mysql-container:3306/users
      spring.datasource.username: root
      spring.datasource.password: 123
      spring.data.mongodb.host: mongo
      spring.data.mongodb.port: 27017
      spring.data.mongodb.database: docker_mongo
    networks:
      - isolation-network
    depends_on:
      - "db" 
      - "mongodb"



  authenticator:
    build: ./authenticator
    container_name: authenticator
    restart: always
    ports:
      - "8081:8080"
    environment:
      spring.datasource.url: jdbc:mysql://mysql-container:3306/users
      spring.datasource.username: root
      spring.datasource.password: 123
    networks:
      - isolation-network
    depends_on:
      - "db" 



  result:
    build: ./Result
    container_name: result
    ports:
      - "8083:8080"
    environment:
      spring.data.mongodb.host: mongo
      spring.data.mongodb.port: 27017
      spring.data.mongodb.database: docker_mongo
      spring.mvc.view.prefix: /WEB-INF/views/
      spring.mvc.view.suffix: .jsp
    networks:
      - isolation-network
    depends_on:
      - "mongodb"



  dataentry:
    build: ./DataEntry
    container_name: dataentry
    restart: always
    ports:
      - "8080:8080"
    environment:
      spring.datasource.url: jdbc:mysql://mysql-container:3306/users
      spring.datasource.username: root
      spring.datasource.password: 123
      spring.mvc.view.prefix: /WEB-INF/views/
      spring.mvc.view.suffix: .jsp
    networks:
      - isolation-network
    depends_on:
      - "db" 


volumes:
  database:
    external: false
